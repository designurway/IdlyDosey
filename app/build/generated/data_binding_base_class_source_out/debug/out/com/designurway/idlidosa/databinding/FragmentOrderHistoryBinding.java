// Generated by view binder compiler. Do not edit!
package com.designurway.idlidosa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.designurway.idlidosa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderHistoryBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView cartTotalTv;

  @NonNull
  public final RelativeLayout countRl;

  @NonNull
  public final ImageView imgSadFace;

  @NonNull
  public final RecyclerView orderHistoryRv;

  private FragmentOrderHistoryBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView cartTotalTv, @NonNull RelativeLayout countRl, @NonNull ImageView imgSadFace,
      @NonNull RecyclerView orderHistoryRv) {
    this.rootView = rootView;
    this.cartTotalTv = cartTotalTv;
    this.countRl = countRl;
    this.imgSadFace = imgSadFace;
    this.orderHistoryRv = orderHistoryRv;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cart_total_tv;
      TextView cartTotalTv = rootView.findViewById(id);
      if (cartTotalTv == null) {
        break missingId;
      }

      id = R.id.count_rl;
      RelativeLayout countRl = rootView.findViewById(id);
      if (countRl == null) {
        break missingId;
      }

      id = R.id.img_sad_face;
      ImageView imgSadFace = rootView.findViewById(id);
      if (imgSadFace == null) {
        break missingId;
      }

      id = R.id.order_history_rv;
      RecyclerView orderHistoryRv = rootView.findViewById(id);
      if (orderHistoryRv == null) {
        break missingId;
      }

      return new FragmentOrderHistoryBinding((RelativeLayout) rootView, cartTotalTv, countRl,
          imgSadFace, orderHistoryRv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
