// Generated by view binder compiler. Do not edit!
package com.designurway.idlidosa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.designurway.idlidosa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPaytmBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView moneyTransfer;

  @NonNull
  public final TextView paymtAmount;

  @NonNull
  public final ImageView paytmLogo;

  @NonNull
  public final Button paytmPay;

  @NonNull
  public final TextView trnsTxt;

  private ActivityPaytmBinding(@NonNull ConstraintLayout rootView, @NonNull TextView moneyTransfer,
      @NonNull TextView paymtAmount, @NonNull ImageView paytmLogo, @NonNull Button paytmPay,
      @NonNull TextView trnsTxt) {
    this.rootView = rootView;
    this.moneyTransfer = moneyTransfer;
    this.paymtAmount = paymtAmount;
    this.paytmLogo = paytmLogo;
    this.paytmPay = paytmPay;
    this.trnsTxt = trnsTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPaytmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPaytmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_paytm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPaytmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.moneyTransfer;
      TextView moneyTransfer = rootView.findViewById(id);
      if (moneyTransfer == null) {
        break missingId;
      }

      id = R.id.paymtAmount;
      TextView paymtAmount = rootView.findViewById(id);
      if (paymtAmount == null) {
        break missingId;
      }

      id = R.id.paytmLogo;
      ImageView paytmLogo = rootView.findViewById(id);
      if (paytmLogo == null) {
        break missingId;
      }

      id = R.id.paytmPay;
      Button paytmPay = rootView.findViewById(id);
      if (paytmPay == null) {
        break missingId;
      }

      id = R.id.trns_txt;
      TextView trnsTxt = rootView.findViewById(id);
      if (trnsTxt == null) {
        break missingId;
      }

      return new ActivityPaytmBinding((ConstraintLayout) rootView, moneyTransfer, paymtAmount,
          paytmLogo, paytmPay, trnsTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
