// Generated by view binder compiler. Do not edit!
package com.designurway.idlidosa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.designurway.idlidosa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout addressBookLy;

  @NonNull
  public final LinearLayout logoutLy;

  @NonNull
  public final LinearLayout orderHistoryLy;

  @NonNull
  public final LinearLayout referFriendLy;

  @NonNull
  public final LinearLayout rewardLy;

  @NonNull
  public final LinearLayout supportLy;

  @NonNull
  public final LinearLayout trackOrdersLy;

  @NonNull
  public final TextView versionTv;

  private FragmentSettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout addressBookLy, @NonNull LinearLayout logoutLy,
      @NonNull LinearLayout orderHistoryLy, @NonNull LinearLayout referFriendLy,
      @NonNull LinearLayout rewardLy, @NonNull LinearLayout supportLy,
      @NonNull LinearLayout trackOrdersLy, @NonNull TextView versionTv) {
    this.rootView = rootView;
    this.addressBookLy = addressBookLy;
    this.logoutLy = logoutLy;
    this.orderHistoryLy = orderHistoryLy;
    this.referFriendLy = referFriendLy;
    this.rewardLy = rewardLy;
    this.supportLy = supportLy;
    this.trackOrdersLy = trackOrdersLy;
    this.versionTv = versionTv;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_book_ly;
      LinearLayout addressBookLy = rootView.findViewById(id);
      if (addressBookLy == null) {
        break missingId;
      }

      id = R.id.logout_ly;
      LinearLayout logoutLy = rootView.findViewById(id);
      if (logoutLy == null) {
        break missingId;
      }

      id = R.id.order_history_ly;
      LinearLayout orderHistoryLy = rootView.findViewById(id);
      if (orderHistoryLy == null) {
        break missingId;
      }

      id = R.id.refer_friend_ly;
      LinearLayout referFriendLy = rootView.findViewById(id);
      if (referFriendLy == null) {
        break missingId;
      }

      id = R.id.reward_ly;
      LinearLayout rewardLy = rootView.findViewById(id);
      if (rewardLy == null) {
        break missingId;
      }

      id = R.id.support_ly;
      LinearLayout supportLy = rootView.findViewById(id);
      if (supportLy == null) {
        break missingId;
      }

      id = R.id.track_orders_ly;
      LinearLayout trackOrdersLy = rootView.findViewById(id);
      if (trackOrdersLy == null) {
        break missingId;
      }

      id = R.id.version_tv;
      TextView versionTv = rootView.findViewById(id);
      if (versionTv == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((RelativeLayout) rootView, addressBookLy, logoutLy,
          orderHistoryLy, referFriendLy, rewardLy, supportLy, trackOrdersLy, versionTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
