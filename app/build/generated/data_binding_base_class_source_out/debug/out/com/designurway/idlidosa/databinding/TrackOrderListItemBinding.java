// Generated by view binder compiler. Do not edit!
package com.designurway.idlidosa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.designurway.idlidosa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TrackOrderListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView orderedDateTv;

  @NonNull
  public final LinearLayout overallLy;

  @NonNull
  public final TextView rupeesTv;

  @NonNull
  public final TextView trackListOrderId;

  @NonNull
  public final Button trackOrderBtn;

  @NonNull
  public final TextView trackOrderListamount;

  private TrackOrderListItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView orderedDateTv, @NonNull LinearLayout overallLy, @NonNull TextView rupeesTv,
      @NonNull TextView trackListOrderId, @NonNull Button trackOrderBtn,
      @NonNull TextView trackOrderListamount) {
    this.rootView = rootView;
    this.orderedDateTv = orderedDateTv;
    this.overallLy = overallLy;
    this.rupeesTv = rupeesTv;
    this.trackListOrderId = trackListOrderId;
    this.trackOrderBtn = trackOrderBtn;
    this.trackOrderListamount = trackOrderListamount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TrackOrderListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TrackOrderListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.track_order_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TrackOrderListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ordered_date_tv;
      TextView orderedDateTv = rootView.findViewById(id);
      if (orderedDateTv == null) {
        break missingId;
      }

      id = R.id.overall_ly;
      LinearLayout overallLy = rootView.findViewById(id);
      if (overallLy == null) {
        break missingId;
      }

      id = R.id.rupees_tv;
      TextView rupeesTv = rootView.findViewById(id);
      if (rupeesTv == null) {
        break missingId;
      }

      id = R.id.trackListOrderId;
      TextView trackListOrderId = rootView.findViewById(id);
      if (trackListOrderId == null) {
        break missingId;
      }

      id = R.id.trackOrderBtn;
      Button trackOrderBtn = rootView.findViewById(id);
      if (trackOrderBtn == null) {
        break missingId;
      }

      id = R.id.trackOrderListamount;
      TextView trackOrderListamount = rootView.findViewById(id);
      if (trackOrderListamount == null) {
        break missingId;
      }

      return new TrackOrderListItemBinding((ConstraintLayout) rootView, orderedDateTv, overallLy,
          rupeesTv, trackListOrderId, trackOrderBtn, trackOrderListamount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
